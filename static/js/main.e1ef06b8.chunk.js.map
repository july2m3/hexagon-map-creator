{"version":3,"sources":["Canvas.tsx","App.tsx","index.tsx","borderless.png"],"names":["Canvas","id","App","drawImage","x","y","imageObj","Image","ctx","document","querySelector","getContext","src","fantasyTiles","onload","Math","floor","random","flatHexCorner","i","angleDeg","angleRad","PI","cos","sin","drawFlatHex","color","point","beginPath","moveTo","lineTo","fillStyle","fill","pointyHexCorner","drawPointyHex","drawGridOfImages","xOffset","canvas","width","sizeOfTiles","sqrt","drawGrid","this","React","Component","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.e1ef06b8.chunk.js","sourcesContent":["import React from 'react';\n\nconst Canvas = () => {\n  //   return <canvas id=\"canvas\" width=\"200\" height=\"200\"></canvas>;\n  return <canvas id=\"canvas\"> </canvas>;\n};\n\nexport default Canvas;\n","import React from 'react';\n\nimport Canvas from './Canvas';\n\nimport './style.css';\nimport fantasyTiles from './borderless.png';\n\nconst sizeOfTiles = 16;\nconst sizeBetweenTiles = sizeOfTiles * 2;\n\nclass App extends React.Component {\n  drawImage = (x: number, y: number) => {\n    let imageObj = new Image(32, 32);\n    let ctx = document.querySelector('canvas')?.getContext('2d')!;\n\n    let w = 32;\n    let h = w * 2;\n\n    imageObj.src = fantasyTiles;\n\n    // ctx.drawImage(imageObj, x, y);\n    // ctx.drawImage(imageObj, 100, 200, 100, 100);\n    imageObj.onload = () => {\n      ctx.drawImage(\n        imageObj,\n        w * Math.floor(Math.random() * 7),\n        16,\n        w,\n        w,\n        x,\n        y,\n        sizeOfTiles,\n        sizeOfTiles,\n      );\n\n      // ctx.drawImage(imageObj,0,0, )\n    };\n  };\n\n  flatHexCorner = (x: number, y: number, i: number) => {\n    let angleDeg = 60 * i;\n    let angleRad = (Math.PI / 180) * angleDeg;\n    return {\n      x: x + sizeOfTiles * Math.cos(angleRad),\n      y: y + sizeOfTiles * Math.sin(angleRad),\n    };\n  };\n\n  drawFlatHex = (x: number, y: number, color: string) => {\n    let point: any;\n    let ctx = document.querySelector('canvas')?.getContext('2d')!;\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n\n    for (let i = 0; i < 7; i++) {\n      point = this.flatHexCorner(x, y, i);\n      ctx.lineTo(point.x, point.y);\n    }\n\n    ctx.fillStyle = color;\n    ctx.fill();\n  };\n\n  pointyHexCorner = (x: number, y: number, i: number) => {\n    let angleDeg = 60 * i - 30;\n    let angleRad = (Math.PI / 180) * angleDeg;\n    return {\n      x: x + sizeOfTiles * Math.cos(angleRad),\n      y: y + sizeOfTiles * Math.sin(angleRad),\n    };\n  };\n\n  drawPointyHex = (x: number, y: number, color: string) => {\n    let point: any;\n    let ctx = document.querySelector('canvas')?.getContext('2d')!;\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n\n    for (let i = 0; i < 7; i++) {\n      point = this.pointyHexCorner(x, y, i);\n      ctx.lineTo(point.x, point.y);\n    }\n\n    ctx.fillStyle = color;\n    ctx.fill();\n  };\n\n  drawGridOfImages = () => {\n    let xOffset = 0;\n    let canvas = document.querySelector('canvas');\n    if (canvas) {\n      for (let x = -sizeOfTiles; x < canvas.width / sizeOfTiles; x++) {\n        for (let y = -sizeOfTiles; y < 720 / sizeOfTiles; y++) {\n          xOffset = y % 2 === 0 ? sizeOfTiles * 0.75 : 0;\n\n          this.drawImage(\n            x * sizeOfTiles * 1.5 + xOffset,\n            (y * (Math.sqrt(3) * sizeOfTiles)) / 4,\n          );\n        }\n      }\n    }\n  };\n\n  drawGrid = () => {\n    let color = 'blue';\n    let xOffset = 0;\n    let canvas = document.querySelector('canvas');\n\n    if (canvas) {\n      for (let x = 0; x < canvas.width / sizeOfTiles; x++) {\n        color = 'blue';\n        // for (let y = 0; y < canvas.height / sizeOfTiles; y++) {\n        for (let y = 0; y < 720 / sizeOfTiles; y++) {\n          color = y % 2 === 0 ? 'green' : 'blue';\n\n          // for drawFlatHex\n          xOffset = y % 2 === 0 ? sizeOfTiles * 1.5 : 0;\n\n          // this.drawPointyHex(\n          this.drawFlatHex(\n            x * (sizeBetweenTiles + sizeOfTiles) + xOffset,\n            (y * (Math.sqrt(3) * sizeOfTiles)) / 2,\n            color,\n          );\n        }\n      }\n    }\n  };\n\n  componentDidMount() {\n    // this.drawGrid();\n    this.drawGridOfImages();\n    // this.drawFlatHex(sizeOfTiles, sizeOfTiles, 'black');\n    // this.drawImage(0, 0);\n    // this.drawImage(sizeOfTiles, 0);\n    // this.drawImage(sizeOfTiles, 0);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Army Game</h1>\n        <Canvas />\n        {/* <img alt=\"ddd\" src={fantasyTiles} /> */}\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n","module.exports = __webpack_public_path__ + \"static/media/borderless.b3f0e1f5.png\";"],"sourceRoot":""}